<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cloudera.framework</groupId>
	<artifactId>cloudera-framework-example</artifactId>
	<packaging>jar</packaging>
	<version>1.4.2-cdh5.7.0</version>

	<parent>
		<groupId>com.cloudera</groupId>
		<artifactId>cloudera-framework</artifactId>
		<version>1.4.2-cdh5.7.0</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-core</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-zookeeper</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-kafka</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-flume</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-avro</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-parquet</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework.client</groupId>
			<artifactId>cloudera-framework-client-elephantbird</artifactId>
			<version>${project.version}</version>
			<type>pom</type>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework</groupId>
			<artifactId>cloudera-framework-common</artifactId>
			<version>${project.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>${opencsv.version}</version>
		</dependency>
		<dependency>
			<groupId>com.cloudera.framework</groupId>
			<artifactId>cloudera-framework-testing</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.avro</groupId>
				<artifactId>avro-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>schema</goal>
						</goals>
						<configuration>
							<stringType>String</stringType>
							<sourceDirectory>src/main/resources/cfg/avro/</sourceDirectory>
							<outputDirectory>src/main/java/</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.cloudera.parcel</groupId>
				<artifactId>cloudera-parcel-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare</id>
						<phase>process-sources</phase>
						<goals>
							<goal>prepare</goal>
						</goals>
						<configuration>
							<parcels>
								<parcel>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>none</classifier>
								</parcel>
							</parcels>
						</configuration>
					</execution>
					<execution>
						<id>package</id>
						<phase>package</phase>
						<goals>
							<goal>build</goal>
						</goals>
						<configuration>
							<parcels>
								<parcel>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>none</classifier>
								</parcel>
							</parcels>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>attached</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/assembly.xml</descriptor>
							</descriptors>
							<tarLongFileMode>gnu</tarLongFileMode>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
<!-- 					<execution>
						<id>parcel-dependency</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/parcel/${project.artifactId}-${project.version}-none.parcel/lib</outputDirectory>
						</configuration>
					</execution>
 -->					<execution>
						<id>parcel-dependencies</id>
						<phase>process-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<excludeTypes>pom</excludeTypes>
							<includeScope>runtime</includeScope>
							<excludeTransitive>false</excludeTransitive>
							<outputDirectory>${project.build.directory}/parcel/${project.artifactId}-${project.version}-none.parcel/lib</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>unpack-assembly</id>
						<phase>verify</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
									<classifier>assembly</classifier>
									<type>tar.gz</type>
									<outputDirectory>${project.build.directory}/assembly</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
